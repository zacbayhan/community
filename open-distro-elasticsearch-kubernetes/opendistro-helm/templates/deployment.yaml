{{- if ne .Values.metadata.role "data"}}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    component: {{ .Values.metadata.name | quote }}
    role: {{ .Values.metadata.role | quote }}
  name: {{ .Values.metadata.roleName | quote }}
  namespace: {{ .Values.metadata.name | quote }}
spec:
  replicas: 3 # Number of Elasticsearch master nodes to deploy
  selector:
    matchLabels:
      component: {{ .Values.metadata.name | quote }}
      role: {{ .Values.metadata.role | quote }}
  template:
    metadata:
      labels:
        component: {{ .Values.metadata.name | quote }}
        role: {{ .Values.metadata.role | quote }}
      annotations:
        iam.amazonaws.com/role: <ARN_OF_IAM_ROLE_FOR_CONTAINER>
    spec:
      # Add toleration for not scheduling on dedicated node
      tolerations:
      - key: dedicated
        value: "true"
        effect: NoSchedule
      # Anti-affinity to disallow deploying client and master nodes on the same worker node
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - topologyKey: "kubernetes.io/hostname"
            labelSelector:
              matchLabels:
                component: {{ .Values.metadata.name | quote }}
                role: {{ .Values.metadata.role | quote }}
        # Node Affinity to attract this Deployment's pods to a specific set of worker nodes
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: type # Replace this with corresponding worker node label's key
                operator: In
                values:
                - general # Replace this with corresponding worker node label's value
      initContainers:
      - name: init-sysctl
        image: busybox:1.27.2
        command:
        - sysctl
        - -w
        - vm.max_map_count={{ .Values.resources.max_map_count }}
        securityContext:
          privileged: {{ .Values.security.deployments.privileged }}
      containers:
      - name: {{ .Values.metadata.name | quote }}
        env:
        - name: CLUSTER_NAME
          value: {{ .Values.metadata.clusterName }}
        {{- range $role, $enabled := .Values.roles }}
        - name: node.{{ $role }}
          value: "{{ $enabled }}"
        {{- end }}
        {{- range $key, $value := .Values.environmental_variables }}
        - name: {{ $key }}
          value: {{ $value | quote }}
        {{- end }}
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: {{ .Values.discovery.namespace | quote }}
          value: elasticsearch-discovery
        - name: {{ .Values.metadata.namespace | quote }}
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: PROCESSORS
          valueFrom:
            resourceFieldRef:
              resource: limits.cpu
        - name: ES_JAVA_OPTS
          value: {{ .Values.resources.esJavaOpts | quote }}
        resources:
          requests:
            memory: {{ .Values.resources.requests.memory }}
            cpu: {{ .Values.resources.requests.cpu }}
          limits:
            memory: {{ .Values.resources.limits.memory }}
            cpu: {{ .Values.resources.limits.cpu }}
        livenessProbe:
          tcpSocket:
            port: transport
          initialDelaySeconds: 60
          periodSeconds: 10
        # Official Image from Open Distro Team
        image: {{ .Values.containers.image }}:{{ .Values.containers.imageTag }}
        imagePullPolicy: {{ .Values.containers.pullPolicy | quote }}
        ports:
        - containerPort: {{ .Values.security.ports.transportPort }}
          name: transport
        - containerPort: {{ .Values.security.ports.httpPort }}
          name: http
        - containerPort: {{ .Values.security.ports.metricsPort }}
          name: metrics
        volumeMounts:
        - mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
          name: config
          subPath: elasticsearch.yml
        - mountPath: /usr/share/elasticsearch/config/logging.yml
          name: config
          subPath: logging.yml
        - mountPath: /usr/share/elasticsearch/config/elk-crt.pem
          name: certs
          subPath: elk-crt.pem
          readOnly: true
        - mountPath: /usr/share/elasticsearch/config/elk-key.pem
          name: certs
          subPath: elk-key.pem
          readOnly: true
        - mountPath: /usr/share/elasticsearch/config/elk-root-ca.pem
          name: certs
          subPath: elk-root-ca.pem
          readOnly: true
        - mountPath: /usr/share/elasticsearch/config/admin-crt.pem
          name: certs
          subPath: admin-crt.pem
          readOnly: true
        - mountPath: /usr/share/elasticsearch/config/admin-key.pem
          name: certs
          subPath: admin-key.pem
          readOnly: true
        - mountPath: /usr/share/elasticsearch/config/admin-root-ca.pem
          name: certs
          subPath: admin-root-ca.pem
          readOnly: true
      volumes:
      - name: config
        configMap:
          name: elasticsearch
      - name: certs
        secret:
          secretName: elasticsearch-tls-data
{{- end }}
