apiVersion: v1
kind: Service
metadata:
  annotations:
    # Service external-dns has to be deployed for this A record to be created in AWS Route53
    external-dns.alpha.kubernetes.io/hostname: {{ .Values.annotations.external_dns }}

    # Defined ELB backend protocol as HTTPS to allow connection to Elasticsearch API
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: https

    # Load Balancer type that will be launched in AWS, ELB or NLB.
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"

    # ARN of ACM certificate registered to the deployed ELB for handling connections over TLS
    # ACM certificate should be issued to the DNS hostname defined earlier (elk.sec.example.com)
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: "arn:aws:acm:us-east-1:111222333444:certificate/c69f6022-b24f-43d9-b9c8-dfe288d9443d"
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "https"
    service.beta.kubernetes.io/aws-load-balancer-connection-draining-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-connection-draining-timeout: "60"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"

    # Annotation to create internal only ELB
    service.beta.kubernetes.io/aws-load-balancer-internal: 0.0.0.0/0
  labels:
    component: {{ .Values.metadata.name | quote }}
    role: client
  name: {{ .Values.metadata.name | quote }}
  namespace: {{ .Values.metadata.namespace | quote }}
spec:
  ports:
    - name: http
      port: {{ .Values.security.ports.httpPort }}
    - name: transport
      port: {{ .Values.security.ports.transportPort }}
    - name: metric
      port: {{ .Values.security.ports.metricsPort }}
  selector:
    component: {{ .Values.metadata.name | quote }}
    role: client
  type: LoadBalancer
